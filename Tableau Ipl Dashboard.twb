<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0217.1203                               -->
<workbook source-build='2020.4.2 (20204.21.0217.1203)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top n player of match' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range max='25' min='1' />
      </column>
      <column caption='top teams' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <range granularity='1' max='14' min='1' />
      </column>
    </datasource>
    <datasource caption='IPL Matches 2008-2020' inline='true' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='IPL Matches 2008-2020' name='textscan.0p7vnnk0ccmkpm19gryhq050wpon'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Nikhil Waghalkar/Desktop/Projects/IPL Dataset from 2008-2020.csv/IPL Matches 2008-2020.csv' dataRefreshTime='' directory='C:/Users/Nikhil Waghalkar/Desktop/Projects/IPL Dataset from 2008-2020.csv' filename='C:/Users/NIKHIL~1/AppData/Local/Temp/TableauTemp/1ap7t6i14ktlls1ganxec0ul2mmn/IPL Matches 2008-2020.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0p7vnnk0ccmkpm19gryhq050wpon' name='IPL Matches 2008-2020.csv' table='[IPL Matches 2008-2020#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:Q817:no:A1:Q817:1' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='city' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='player_of_match' ordinal='3' />
            <column datatype='string' name='venue' ordinal='4' />
            <column datatype='integer' name='neutral_venue' ordinal='5' />
            <column datatype='string' name='team1' ordinal='6' />
            <column datatype='string' name='team2' ordinal='7' />
            <column datatype='string' name='toss_winner' ordinal='8' />
            <column datatype='string' name='toss_decision' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='string' name='result' ordinal='11' />
            <column datatype='integer' name='result_margin' ordinal='12' />
            <column datatype='string' name='eliminator' ordinal='13' />
            <column datatype='string' name='method' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0p7vnnk0ccmkpm19gryhq050wpon' name='IPL Matches 2008-2020.csv' table='[IPL Matches 2008-2020#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:Q817:no:A1:Q817:1' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='city' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='player_of_match' ordinal='3' />
            <column datatype='string' name='venue' ordinal='4' />
            <column datatype='integer' name='neutral_venue' ordinal='5' />
            <column datatype='string' name='team1' ordinal='6' />
            <column datatype='string' name='team2' ordinal='7' />
            <column datatype='string' name='toss_winner' ordinal='8' />
            <column datatype='string' name='toss_decision' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='string' name='result' ordinal='11' />
            <column datatype='integer' name='result_margin' ordinal='12' />
            <column datatype='string' name='eliminator' ordinal='13' />
            <column datatype='string' name='method' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q817:no:A1:Q817:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>3247</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>130</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral_venue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[neutral_venue]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>neutral_venue</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>130</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>130</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[result_margin]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>result_margin</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eliminator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[eliminator]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>eliminator</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>130</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[IPL Matches 2008-2020.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([id])' />
      </column>
      <column caption='top players' datatype='boolean' name='[Calculation_858217219300917249]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1137158921175203840]&gt;[Parameters].[Parameter 1]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='IPL Matches 2008-2020.csv' datatype='table' name='[__tableau_internal_object_id__].[IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
          <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
          <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
          <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
          <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
          <semantic-value key='&quot;Indore&quot;' value='22.7196' />
          <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
          <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
          <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
          <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
          <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
          <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
          <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
          <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
          <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
          <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
          <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
          <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
          <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
          <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
          <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Eliminator' datatype='string' name='[eliminator]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Neutral Venue' datatype='integer' name='[neutral_venue]' role='measure' type='quantitative' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Result Margin' datatype='integer' name='[result_margin]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[Winner Set]' derivation='InOut' name='[io:Winner Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_858217219300917249]' derivation='User' name='[usr:Calculation_858217219300917249:nk]' pivot='key' type='nominal' />
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
        </groupfilter>
      </group>
      <group caption='Action (Player Of Match)' hidden='true' name='[Action (Player Of Match)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[player_of_match]' />
        </groupfilter>
      </group>
      <group caption='Action (Winner)' hidden='true' name='[Action (Winner)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[winner]' />
        </groupfilter>
      </group>
      <group caption='Winner Set' name='[Winner Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1137158921175203840]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[winner]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Winner Set:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:toss_winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_858217219300917249:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='top n player of match' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range max='25' min='1' />
        </column>
        <column caption='top teams' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
          <range granularity='1' max='14' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='IPL Matches 2008-2020.csv' id='IPL Matches 2008-2020.csv_031D571B38CC4E1FBE0E0D5DF37D6578'>
            <properties context=''>
              <relation connection='textscan.0p7vnnk0ccmkpm19gryhq050wpon' name='IPL Matches 2008-2020.csv' table='[IPL Matches 2008-2020#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:Q817:no:A1:Q817:1' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='player_of_match' ordinal='3' />
                  <column datatype='string' name='venue' ordinal='4' />
                  <column datatype='integer' name='neutral_venue' ordinal='5' />
                  <column datatype='string' name='team1' ordinal='6' />
                  <column datatype='string' name='team2' ordinal='7' />
                  <column datatype='string' name='toss_winner' ordinal='8' />
                  <column datatype='string' name='toss_decision' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='string' name='result' ordinal='11' />
                  <column datatype='integer' name='result_margin' ordinal='12' />
                  <column datatype='string' name='eliminator' ordinal='13' />
                  <column datatype='string' name='method' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='number match win' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='match cities ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Toss Winners'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Toss winners</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
            <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
                <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
                <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
                <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
                <semantic-value key='&quot;Indore&quot;' value='22.7196' />
                <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
                <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
                <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
                <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
                <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
                <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
                <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
                <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
              </semantic-values>
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1137158921175203840]' derivation='User' name='[usr:Calculation_1137158921175203840:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]'>
            <groupfilter function='level-members' level='[none:toss_decision:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' />
              <color column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]' />
              <text column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{334A1F88-2727-47AB-ADDE-DF5301B5FB0D}' />
    </worksheet>
    <worksheet name='match cities '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Match Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
            <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
                <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
                <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
                <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
                <semantic-value key='&quot;Indore&quot;' value='22.7196' />
                <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
                <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
                <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
                <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
                <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
                <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
                <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
                <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
              </semantic-values>
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137158921175203840]' derivation='User' name='[usr:Calculation_1137158921175203840:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]'>
            <groupfilter from='&quot;Abu Dhabi&quot;' function='range' level='[none:city:nk]' to='&quot;Visakhapatnam&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Longitude (generated)]' field-type='quantitative' max='12574889.225721918' min='4797671.1029188074' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Latitude (generated)]' field-type='quantitative' max='5110530.7926237946' min='-225295.30238572828' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' />
              <text column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]' />
              <lod column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]' />
              <geometry column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Latitude (generated)]</rows>
        <cols>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{89C1B112-DAC2-446E-BDC4-F13B7FAE0AA0}' />
    </worksheet>
    <worksheet name='max win v/s max margin'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Max win v/s Max margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
            <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
                <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
                <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
                <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
                <semantic-value key='&quot;Indore&quot;' value='22.7196' />
                <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
                <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
                <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
                <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
                <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
                <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
                <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
                <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
              </semantic-values>
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[result_margin]' derivation='Max' name='[max:result_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Result Margin' datatype='integer' name='[result_margin]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1137158921175203840]' derivation='User' name='[usr:Calculation_1137158921175203840:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[max:result_margin:qk]</rows>
        <cols>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]</cols>
      </table>
      <simple-id uuid='{5CA3B246-9BAE-4AB7-85BB-DAB3C34F1AA6}' />
    </worksheet>
    <worksheet name='number match win'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Number of match win</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top teams' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range granularity='1' max='14' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
            <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
                <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
                <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
                <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
                <semantic-value key='&quot;Indore&quot;' value='22.7196' />
                <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
                <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
                <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
                <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
                <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
                <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
                <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
                <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
              </semantic-values>
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Winner Set]' derivation='InOut' name='[io:Winner Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137158921175203840]' derivation='User' name='[usr:Calculation_1137158921175203840:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]'>
            <groupfilter function='level-members' level='[none:winner:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' />
              <text column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[io:Winner Set:nk] / [federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{7A3E9A1E-F4C6-4BCE-96FC-05D1D9546973}' />
    </worksheet>
    <worksheet name='player  of the match'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Player of the match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n player of match' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range max='25' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
            <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='top players' datatype='boolean' name='[Calculation_858217219300917249]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1137158921175203840]&gt;[Parameters].[Parameter 1]' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
                <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
                <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
                <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
                <semantic-value key='&quot;Indore&quot;' value='22.7196' />
                <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
                <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
                <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
                <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
                <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
                <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
                <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
                <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
              </semantic-values>
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1137158921175203840]' derivation='User' name='[usr:Calculation_1137158921175203840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_858217219300917249]' derivation='User' name='[usr:Calculation_858217219300917249:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]'>
            <groupfilter function='level-members' level='[city]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]'>
            <groupfilter function='level-members' level='[winner]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:venue:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Barabati Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Brabourne Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Buffalo Park&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;De Beers Diamond Oval&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Dr DY Patil Sports Academy&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Dubai International Cricket Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Eden Gardens&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Feroz Shah Kotla&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Green Park&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Himachal Pradesh Cricket Association Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Holkar Cricket Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;JSCA International Stadium Complex&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Kingsmead&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;M Chinnaswamy Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;M.Chinnaswamy Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;MA Chidambaram Stadium, Chepauk&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Maharashtra Cricket Association Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Nehru Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;New Wanderers Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Newlands&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;OUTsurance Oval&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Punjab Cricket Association IS Bindra Stadium, Mohali&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Punjab Cricket Association Stadium, Mohali&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Rajiv Gandhi International Stadium, Uppal&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Sardar Patel Stadium, Motera&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Saurashtra Cricket Association Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Sawai Mansingh Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Shaheed Veer Narayan Singh International Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Sharjah Cricket Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Sheikh Zayed Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;St George&apos;s Park&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Subrata Roy Sahara Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;SuperSport Park&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Vidarbha Cricket Association Stadium, Jamtha&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Wankhede Stadium&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (Winner)]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[Action (City)]</column>
            <column>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:venue:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' field-type='quantitative' max='31' min='-5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffffff' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_858217219300917249:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]</rows>
        <cols>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:player_of_match:nk]</cols>
      </table>
      <simple-id uuid='{22C5BB83-B85B-4F02-AE2E-4A99C3043B97}' />
    </worksheet>
    <worksheet name='toss win and decision'>
      <table>
        <view>
          <datasources>
            <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
            <column caption='number of matches' datatype='integer' name='[Calculation_1137158921175203840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1137158921175203840]' derivation='User' name='[usr:Calculation_1137158921175203840:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]' direction='DESC' using='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' num-steps='3' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]' />
              <color column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]' />
              <size column='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8D78DC37-46DB-4BFA-B458-476761ACCD0E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='IPL Matches 2008-2020' name='federated.1ywu5xz1ybstx31e2ybkd0vb4io8' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='top n player of match' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range max='25' min='1' />
        </column>
        <column caption='top teams' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
          <range granularity='1' max='14' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ywu5xz1ybstx31e2ybkd0vb4io8'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Ahmedabad&quot;' value='23.022500000000001' />
            <semantic-value key='&quot;Bangalore&quot;' value='12.9716' />
            <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
            <semantic-value key='&quot;Dharamsala&quot;' value='32.219000000000001' />
            <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
            <semantic-value key='&quot;Indore&quot;' value='22.7196' />
            <semantic-value key='&quot;Johannesburg&quot;' value='-26.125399999999999' />
            <semantic-value key='&quot;Kimberley&quot;' value='-28.741900000000001' />
            <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
            <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
            <semantic-value key='&quot;Visakhapatnam&quot;' value='17.686800000000002' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Ahmedabad&quot;' value='72.571399999999997' />
            <semantic-value key='&quot;Bangalore&quot;' value='77.5946' />
            <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
            <semantic-value key='&quot;Dharamsala&quot;' value='76.323400000000007' />
            <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
            <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
            <semantic-value key='&quot;Johannesburg&quot;' value='28.054400000000001' />
            <semantic-value key='&quot;Kimberley&quot;' value='24.771899999999999' />
            <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
            <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
            <semantic-value key='&quot;Visakhapatnam&quot;' value='83.218500000000006' />
          </semantic-values>
        </column>
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
        <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
        <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
        <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
        <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
        <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='50' param='horz' w='98504' x='748' y='9007'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='46' param='horz' w='98504' x='748' y='9007'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='42' param='horz' w='98504' x='748' y='9007'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='39' param='horz' w='98504' x='748' y='9007'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='35' param='horz' w='98504' x='748' y='9007'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='31' param='horz' w='98504' x='748' y='9007'>
                      <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89522' id='27' param='horz' w='98504' x='748' y='9007'>
                        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='89522' id='25' w='98504' x='748' y='9007'>
                          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='40993' id='22' param='horz' w='98504' x='748' y='9007'>
                            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='40993' id='7' param='horz' w='98504' x='748' y='9007'>
                              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='40993' id='5' w='98504' x='748' y='9007'>
                                <zone h='40993' id='23' name='max win v/s max margin' w='30581' x='38915' y='9007'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='40993' id='33' name='number match win' w='38167' x='748' y='9007'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='40993' id='44' name='match cities ' w='29756' x='69496' y='9007'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                          <zone h='48529' id='40' name='Toss Winners' w='21798' x='77454' y='50000'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='48529' id='48' name='player  of the match' w='76706' x='748' y='50000'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7536' id='54' w='98504' x='748' y='1471'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='15'>Ipl matches analysis</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='16912' id='12' mode='slider' param='[Parameters].[Parameter 2]' w='7764' x='30964' y='18934' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='12316' id='28' mode='slider' param='[Parameters].[Parameter 1]' w='14967' x='46211' y='51838' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7353' id='36' mode='checkdropdown' name='number match win' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]' w='7671' x='30964' y='32537' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7537' id='43' mode='checkdropdown' name='Toss Winners' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]' w='10196' x='88775' y='51654' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5515' id='47' mode='checkdropdown' name='match cities ' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]' w='8980' x='87652' y='9743' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8456' id='51' mode='checkdropdown' name='player  of the match' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:venue:nk]' w='10664' x='61646' y='53493' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='58' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97058' id='57' param='vert' w='98504' x='748' y='1471'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7536' id='54' w='98504' x='748' y='1471'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='15'>Ipl matches analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7353' id='36' mode='checkdropdown' name='number match win' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]' w='7671' x='30964' y='32537'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40993' id='33' is-fixed='true' name='number match win' w='38167' x='748' y='9007'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40993' id='23' is-fixed='true' name='max win v/s max margin' w='30581' x='38915' y='9007'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5515' id='47' mode='checkdropdown' name='match cities ' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]' w='8980' x='87652' y='9743'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40993' id='44' is-fixed='true' name='match cities ' w='29756' x='69496' y='9007'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='16912' id='12' mode='slider' param='[Parameters].[Parameter 2]' w='7764' x='30964' y='18934'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8456' id='51' mode='checkdropdown' name='player  of the match' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:venue:nk]' w='10664' x='61646' y='53493'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48529' id='48' is-fixed='true' name='player  of the match' w='76706' x='748' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7537' id='43' mode='checkdropdown' name='Toss Winners' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]' w='10196' x='88775' y='51654'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48529' id='40' is-fixed='true' name='Toss Winners' w='21798' x='77454' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='12316' id='28' mode='slider' param='[Parameters].[Parameter 1]' w='14967' x='46211' y='51838'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3A611850-BE6B-4BB9-9F75-9B8B3EFB8B20}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='number match win'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[io:Winner Set:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:player_of_match:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{996E55CE-558A-4A72-A0C3-1ED688AEE7C1}' />
    </window>
    <window class='worksheet' name='toss win and decision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9D590D6-D3C4-4F7B-B478-9860F4745279}' />
    </window>
    <window class='worksheet' name='Toss Winners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_decision:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B8C3B04-5D18-4564-8C5A-58D4088BBC0E}' />
    </window>
    <window class='worksheet' name='player  of the match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:venue:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:player_of_match:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:venue:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_858217219300917249:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{226AEACA-F3D6-4967-BC37-8A97FDEDC207}' />
    </window>
    <window class='worksheet' name='match cities '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:city:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:result_margin:ok]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:result_margin:qk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[usr:Calculation_1137158921175203840:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{04AC7CA6-5597-4D31-8704-272213BC74B8}' />
    </window>
    <window class='worksheet' name='max win v/s max margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:team1:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:team2:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:toss_winner:nk]</field>
            <field>[federated.1ywu5xz1ybstx31e2ybkd0vb4io8].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BA2B126-3731-43BF-A72B-4542AF751AF4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Toss Winners' />
        <viewpoint name='match cities '>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='max win v/s max margin'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='number match win' />
        <viewpoint name='player  of the match'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='40' />
      <simple-id uuid='{37667DFD-108D-4DC4-9C95-052377E1C315}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss Winners' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='match cities ' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='max win v/s max margin' width='192'>
      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
      mgiAkNb+P+aJoM3abVHhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='number match win' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='player  of the match' width='192'>
      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
      gqP9DUsuEJ5R/0QpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='toss win and decision' width='192'>
      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
      OirXP7uv+v80i0FoRIFW0AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
